PROJECT WORK LOG - MoodBooMs
===================================

2025-07-26 10:29: Resolved Menubar Icon Crashes on macOS 15.5
------------------------------------------------------------
Successfully implemented stable icon solution for macOS Sequoia:

Problem:
- VS Code and app crashed when attempting to load PNG icons
- All PNG file loading methods resulted in empty icons
- macOS 15.5 has compatibility issues with standard icon loading

Solution Implemented:
- Created programmatic icon generation in electron/main.js
- Draws a 16x16 purple/pink circle icon in memory
- Bypasses file loading entirely using Buffer and nativeImage
- Multiple fallback strategies ensure app always starts

Technical Details:
- Primary: Try loading PNG files (for future compatibility)
- Secondary: Create colored circle icon programmatically
- Tertiary: Fall back to text-only "MB" if needed
- Added comprehensive error handling and logging

Result:
- App runs stably with visible menubar icon
- No more crashes on icon loading
- Icon appears as purple/pink circle in menubar
- Solution documented in CLAUDE.md for future reference

Files Modified:
- electron/main.js - Implemented programmatic icon generation
- CLAUDE.md - Added working icon solution documentation

2025-07-26 07:56: Project Structure Refactoring
------------------------------------------------------------
Reorganized project for better maintainability:

Created folder structure:
- /electron/assets/icons - Production icon files
- /tests/electron - Electron-specific test files
- /tests/unit - Unit tests
- /tests/integration - Integration tests
- /temp - Temporary files and experiments (gitignored)
- /logs - Log files (gitignored)

Actions taken:
- Moved all test files from electron/ to tests/electron/
- Moved all icon files to electron/assets/icons/
- Moved log files to logs/
- Updated .gitignore to exclude temp/ and logs/
- Added README files to test directories
- Updated main.js with comment about icon path

Result: Clean separation between production code and tests

2025-07-26 07:52: Tray Icon Investigation
------------------------------------------------------------
Investigation into why icons don't work on macOS 15.5:
- Confirmed this is a macOS Sequoia (15.x) compatibility issue
- All image loading methods fail (direct path, nativeImage, base64)
- Icons always return empty (0x0 size) even for valid PNG files
- User briefly saw question mark icon (macOS's missing icon indicator)
- System refuses to load any image files for tray icons
- Created GitHub issue #49 to track this problem

Findings:
- This appears to be an OS-level restriction/bug
- Other Electron apps also affected (1Password, etc.)
- Only workaround is text-based tray using setTitle()
- May need to wait for Electron or macOS updates

2025-07-25 23:58: Menubar App Development & Debugging Session
------------------------------------------------------------
Work completed:
- Successfully created working macOS menubar app with Electron
- Resolved multiple critical issues preventing menubar functionality
- Cleaned up unnecessary files from failed approaches

CRITICAL DEBUGGING FINDINGS:

1. Electron Tray Icon Issues on macOS 15.5 (Sequoia):
   - Standard icon loading methods fail with "invalid icon" errors
   - Solution: Use empty nativeImage with setTitle('MB') for text display
   - Icon files cause crashes even when properly formatted

2. Electron Version Compatibility:
   - Electron 37.x causes crashes after ~10 seconds on macOS 15.5
   - Solution: Downgrade to Electron 28.3.3 for stability
   - Version 28.x works reliably without timeout crashes

3. Window Resizing Crashes:
   - Any window resize operation causes immediate app crash
   - Solution: Set resizable: false and all related properties
   - Must disable: resizable, minimizable, maximizable, fullscreenable

4. Working Configuration:
   - Window size: 380x520 (fits all content without scrolling)
   - Use empty image for tray: nativeImage.createEmpty()
   - Use tray.setTitle('MB') instead of icon
   - Keep app alive with setInterval(() => {}, 1000)

Approaches Tried (Failed):
- Tauri framework - tray icon issues, complex setup
- menubar npm package - incompatible with newer Electron
- Various icon formats (PNG, template images) - all crash
- Electron 37.x - timeout crashes after 10 seconds

Files Removed:
- src-tauri/ directory (Tauri attempt)
- scripts/ directory (unused)
- Various test files (electron-alternative.js, test.html, etc.)
- Debug and log files

Final Working Structure:
- electron/main.js - Minimal working menubar app
- Simple configuration without complex features
- Text-based menubar icon ('MB')
- Stable window management

Next priority tasks:
- Implement proper icon support when macOS compatibility improves
- Add data persistence (electron-store)
- Enhance security with contextBridge
- Build production version
- CRITICAL: Make app packable and transferable to any Mac (Epic #7)
- Future: Add Windows support for cross-platform distribution


2025-07-25 22:25: Session work (no new commits)
------------------------------------------------------------
Work completed:



Session work (uncommitted):
  - Modified: .gitignore
  - Modified Electron main process: main.js
  - Modified: package.json
  - Updated React component: MenuBarApp.jsx

Files modified:


Next priority tasks:
GitHub Issues (Priority):
  - #10: Add date selection and navigation
  - #11: Create fertility phase detection logic
  - #12: Add cycle history tracking
  - #13: [EPIC] Dynamic UI & Tray Icons
  - #14: Design and create tray icon set for all phases

Suggested Improvements (not yet in GitHub):
  - Implement data persistence with electron-store
  - Create dynamic tray icons for different cycle phases
  - Add user onboarding flow for first-time users


2025-07-25 21:00: Created project structure with 6 Epics and 30 child issues
------------------------------------------------------------
Work completed:
- Created comprehensive project plan in README.md
- Set up GitHub project board with 6 epics and 30 child issues
- Established development roadmap and architecture

GitHub Issues Created:
Epics:
  - #1: [EPIC] Core Infrastructure & Security
  - #7: [EPIC] Calendar & Date Calculations  
  - #13: [EPIC] Dynamic UI & Tray Icons
  - #19: [EPIC] User Settings & Preferences
  - #25: [EPIC] Production Build & Distribution
  - #31: [EPIC] Testing & Quality Assurance

Child Issues:
  - #2-#6: Security and infrastructure tasks
  - #8-#12: Calendar and calculation features
  - #14-#18: UI and visual components
  - #20-#24: Settings and user preferences
  - #26-#30: Build and distribution setup
  - #32-#36: Testing and quality assurance

Files modified:
  - README.md (complete redesign with project plan)
  - CLAUDE.md (enhanced with development practices)

Next priority tasks:
GitHub Issues (Priority):
[CRITICAL] - #1: [EPIC] Core Infrastructure & Security
[HIGH]     - #2: Implement secure Electron preload script with contextBridge
[HIGH]     - #3: Set up electron-store for data persistence
[HIGH]     - #4: Create IPC communication layer for main/renderer
[HIGH]     - #5: Add Content Security Policy (CSP)
[HIGH]     - #6: Remove nodeIntegration and enable contextIsolation

Development approach:
- Start with Epic #1 to establish secure foundation
- Current implementation has critical security vulnerabilities
- Must implement contextBridge and remove nodeIntegration
- Add data persistence before implementing features

Suggested next steps:
1. Create feature branch for Epic #1: `git checkout -b feat/core-infrastructure`
2. Begin with issue #2 - preload script implementation
3. Set up basic testing infrastructure early
4. Document architectural decisions as we go

1. Electron Tray Icon Issues on macOS 15.5 (Sequoia):
   - Standard icon loading methods fail with "invalid icon" errors
   - Solution: Use empty nativeImage with setTitle('MB') for text display
   - Icon files cause crashes even when properly formatted

2. Electron Version Compatibility:
   - Electron 37.x causes crashes after ~10 seconds on macOS 15.5
   - Solution: Downgrade to Electron 28.3.3 for stability
   - Version 28.x works reliably without timeout crashes

3. Window Resizing Crashes:
   - Any window resize operation causes immediate app crash
   - Solution: Set resizable: false and all related properties
   - Must disable: resizable, minimizable, maximizable, fullscreenable

4. Working Configuration:
   - Window size: 380x520 (fits all content without scrolling)
   - Use empty image for tray: nativeImage.createEmpty()
   - Use tray.setTitle('MB') instead of icon
   - Keep app alive with setInterval(() => {}, 1000)

Approaches Tried (Failed):
- Tauri framework - tray icon issues, complex setup
- menubar npm package - incompatible with newer Electron
- Various icon formats (PNG, template images) - all crash
- Electron 37.x - timeout crashes after 10 seconds

Files Removed:
- src-tauri/ directory (Tauri attempt)
- scripts/ directory (unused)
- Various test files (electron-alternative.js, test.html, etc.)
- Debug and log files

Final Working Structure:
- electron/main.js - Minimal working menubar app
- Simple configuration without complex features
- Text-based menubar icon ('MB')
- Stable window management

Next priority tasks:
- Implement proper icon support when macOS compatibility improves
- Add data persistence (electron-store)
- Enhance security with contextBridge
- Build production version
- CRITICAL: Make app packable and transferable to any Mac (Epic #7)
- Future: Add Windows support for cross-platform distribution